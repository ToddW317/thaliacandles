rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection rules
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow write: if request.auth != null && (request.auth.uid == userId || isAdmin());
    }
    
    // Products collection rules
    match /products/{productId} {
      allow read: if true;  // Anyone can view products
      allow write: if request.auth != null && isAdmin();
    }
    
    // Collections collection rules
    match /collections/{collectionId} {
      allow read: if true;  // Anyone can view collections
      allow write: if request.auth != null && isAdmin();
    }
    
    // Orders collection rules (if you add this later)
    match /orders/{orderId} {
      allow read: if request.auth != null && (
        request.auth.uid == resource.data.userId || isAdmin()
      );
      allow create: if request.auth != null;  // Logged in users can create orders
      allow update, delete: if request.auth != null && isAdmin();
    }
    
    // Default rules for other collections
    match /{document=**} {
      allow read: if true;
      allow write: if request.auth != null && isAdmin();
    }
  }
} 